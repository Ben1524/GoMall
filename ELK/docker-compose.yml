version: '3.8'

services:
  # Elasticsearch 服务
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: elk-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # 开发环境关闭安全验证，生产环境建议开启
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # 设置JVM内存大小
      - cluster.name=elk-cluster
    ports:
      - "9200:9200"  # Elasticsearch API端口
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data  # 数据持久化
    networks:
      - elk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Logstash 服务
  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.4
    container_name: elk-logstash
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"  # 设置JVM内存大小
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline  # 管道配置目录
      - ./logstash/config:/usr/share/logstash/config      # 额外配置目录
      - ./logs:/var/logs                                  # 日志文件挂载
    ports:
      - "5000:5000/tcp"   # TCP输入端口
      - "5000:5000/udp"   # UDP输入端口
      - "9600:9600"       # Logstash监控端口
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-network
    restart: unless-stopped

  # Kibana 服务
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: elk-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200  # 连接Elasticsearch
      - XPACK_MONITORING_ENABLED=true
    ports:
      - "5601:5601"  # Kibana Web界面端口
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      interval: 10s
      timeout: 5s
      retries: 5

# 网络配置
networks:
  elk-network:
    driver: bridge
    name: elk-network

# 数据卷配置
volumes:
  elasticsearch-data:
    name: elk-elasticsearch-data
